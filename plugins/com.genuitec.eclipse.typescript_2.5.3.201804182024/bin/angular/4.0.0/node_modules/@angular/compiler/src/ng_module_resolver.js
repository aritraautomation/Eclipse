"use strict";
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = require("@angular/core");
var compile_reflector_1 = require("./compile_reflector");
var directive_resolver_1 = require("./directive_resolver");
var injectable_1 = require("./injectable");
function _isNgModuleMetadata(obj) {
    return obj instanceof core_1.NgModule;
}
/**
 * Resolves types to {@link NgModule}.
 */
var NgModuleResolver = (function () {
    function NgModuleResolver(_reflector) {
        this._reflector = _reflector;
    }
    NgModuleResolver.prototype.isNgModule = function (type) { return this._reflector.annotations(type).some(_isNgModuleMetadata); };
    NgModuleResolver.prototype.resolve = function (type, throwIfNotFound) {
        if (throwIfNotFound === void 0) { throwIfNotFound = true; }
        var ngModuleMeta = directive_resolver_1.findLast(this._reflector.annotations(type), _isNgModuleMetadata);
        if (ngModuleMeta) {
            return ngModuleMeta;
        }
        else {
            if (throwIfNotFound) {
                throw new Error("No NgModule metadata found for '" + core_1.Éµstringify(type) + "'.");
            }
            return null;
        }
    };
    return NgModuleResolver;
}());
NgModuleResolver.decorators = [
    { type: injectable_1.CompilerInjectable },
];
/** @nocollapse */
NgModuleResolver.ctorParameters = function () { return [
    { type: compile_reflector_1.CompileReflector, },
]; };
exports.NgModuleResolver = NgModuleResolver;
//# sourceMappingURL=ng_module_resolver.js.map